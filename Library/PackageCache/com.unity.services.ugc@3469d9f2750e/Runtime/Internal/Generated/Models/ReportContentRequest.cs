//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// Report some content request
    /// </summary>
    [Preserve]
    [DataContract(Name = "ReportContentRequest")]
    internal class ReportContentRequest
    {
        /// <summary>
        /// Report some content request
        /// </summary>
        /// <param name="reason">reason param</param>
        /// <param name="otherReason">If Reason was Other, provide an alternate reason here</param>
        [Preserve]
        public ReportContentRequest(Reason reason, string otherReason = default)
        {
            Reason = reason;
            OtherReason = otherReason;
        }

        /// <summary>
        /// Parameter reason of ReportContentRequest
        /// </summary>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        [DataMember(Name = "reason", IsRequired = true, EmitDefaultValue = true)]
        public Reason Reason{ get; }
        
        /// <summary>
        /// If Reason was Other, provide an alternate reason here
        /// </summary>
        [Preserve]
        [DataMember(Name = "otherReason", EmitDefaultValue = false)]
        public string OtherReason{ get; }
    
        /// <summary>
        /// Formats a ReportContentRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            serializedModel += "reason," + Reason.ToString() + ",";
            if (OtherReason != null)
            {
                serializedModel += "otherReason," + OtherReason;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a ReportContentRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            var reasonStringValue = Reason.ToString();
            dictionary.Add("reason", reasonStringValue);
            
            if (OtherReason != null)
            {
                var otherReasonStringValue = OtherReason.ToString();
                dictionary.Add("otherReason", otherReasonStringValue);
            }
            
            return dictionary;
        }
    }
}
