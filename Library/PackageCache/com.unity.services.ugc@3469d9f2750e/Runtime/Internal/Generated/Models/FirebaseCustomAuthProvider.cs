//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// FirebaseCustomAuthProvider model
    /// </summary>
    [Preserve]
    [DataContract(Name = "FirebaseCustomAuthProvider")]
    public class FirebaseCustomAuthProvider
    {
        /// <summary>
        /// Creates an instance of FirebaseCustomAuthProvider.
        /// </summary>
        /// <param name="name">name param</param>
        /// <param name="enabled">enabled param</param>
        [Preserve]
        public FirebaseCustomAuthProvider(string name = default, bool enabled = default)
        {
            Name = name;
            Enabled = enabled;
        }

        /// <summary>
        /// Parameter name of FirebaseCustomAuthProvider
        /// </summary>
        [Preserve]
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name{ get; }
        
        /// <summary>
        /// Parameter enabled of FirebaseCustomAuthProvider
        /// </summary>
        [Preserve]
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled{ get; }
    
        /// <summary>
        /// Formats a FirebaseCustomAuthProvider into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Name != null)
            {
                serializedModel += "name," + Name + ",";
            }
            serializedModel += "enabled," + Enabled.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a FirebaseCustomAuthProvider as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Name != null)
            {
                var nameStringValue = Name.ToString();
                dictionary.Add("name", nameStringValue);
            }
            
            var enabledStringValue = Enabled.ToString();
            dictionary.Add("enabled", enabledStringValue);
            
            return dictionary;
        }
    }
}
