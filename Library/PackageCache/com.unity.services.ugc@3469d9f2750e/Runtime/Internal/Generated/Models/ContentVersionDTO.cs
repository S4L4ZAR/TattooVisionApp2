//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// ContentVersionDTO model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ContentVersionDTO")]
    internal class ContentVersionDTO
    {
        /// <summary>
        /// Creates an instance of ContentVersionDTO.
        /// </summary>
        /// <param name="id">id param</param>
        /// <param name="contentId">contentId param</param>
        /// <param name="createdAt">createdAt param</param>
        /// <param name="updatedAt">updatedAt param</param>
        /// <param name="assetUploadStatus">assetUploadStatus param</param>
        /// <param name="thumbnailUploadStatus">thumbnailUploadStatus param</param>
        /// <param name="contentMd5Hash">contentMd5Hash param</param>
        /// <param name="thumbnailMd5Hash">thumbnailMd5Hash param</param>
        /// <param name="size">size param</param>
        [Preserve]
        public ContentVersionDTO(string id, string contentId, DateTime createdAt, DateTime updatedAt, ContentUploadStatus assetUploadStatus, ContentUploadStatus thumbnailUploadStatus, string contentMd5Hash = default, string thumbnailMd5Hash = default, long? size = default)
        {
            Id = id;
            ContentMd5Hash = contentMd5Hash;
            ThumbnailMd5Hash = thumbnailMd5Hash;
            Size = size;
            ContentId = contentId;
            CreatedAt = createdAt;
            UpdatedAt = updatedAt;
            AssetUploadStatus = assetUploadStatus;
            ThumbnailUploadStatus = thumbnailUploadStatus;
        }

        /// <summary>
        /// Parameter id of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id{ get; }
        
        /// <summary>
        /// Parameter contentMd5Hash of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "contentMd5Hash", EmitDefaultValue = false)]
        public string ContentMd5Hash{ get; }
        
        /// <summary>
        /// Parameter thumbnailMd5Hash of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "thumbnailMd5Hash", EmitDefaultValue = false)]
        public string ThumbnailMd5Hash{ get; }
        
        /// <summary>
        /// Parameter size of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "size", EmitDefaultValue = false)]
        public long? Size{ get; }
        
        /// <summary>
        /// Parameter contentId of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "contentId", IsRequired = true, EmitDefaultValue = true)]
        public string ContentId{ get; }
        
        /// <summary>
        /// Parameter createdAt of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt{ get; }
        
        /// <summary>
        /// Parameter updatedAt of ContentVersionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "updatedAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTime UpdatedAt{ get; }
        
        /// <summary>
        /// Parameter assetUploadStatus of ContentVersionDTO
        /// </summary>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        [DataMember(Name = "assetUploadStatus", IsRequired = true, EmitDefaultValue = true)]
        public ContentUploadStatus AssetUploadStatus{ get; }
        
        /// <summary>
        /// Parameter thumbnailUploadStatus of ContentVersionDTO
        /// </summary>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        [DataMember(Name = "thumbnailUploadStatus", IsRequired = true, EmitDefaultValue = true)]
        public ContentUploadStatus ThumbnailUploadStatus{ get; }
    
        /// <summary>
        /// Formats a ContentVersionDTO into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Id != null)
            {
                serializedModel += "id," + Id + ",";
            }
            if (ContentMd5Hash != null)
            {
                serializedModel += "contentMd5Hash," + ContentMd5Hash + ",";
            }
            if (ThumbnailMd5Hash != null)
            {
                serializedModel += "thumbnailMd5Hash," + ThumbnailMd5Hash + ",";
            }
            if (Size != null)
            {
                serializedModel += "size," + Size.ToString() + ",";
            }
            if (ContentId != null)
            {
                serializedModel += "contentId," + ContentId + ",";
            }
            if (CreatedAt != null)
            {
                serializedModel += "createdAt," + CreatedAt.ToString() + ",";
            }
            if (UpdatedAt != null)
            {
                serializedModel += "updatedAt," + UpdatedAt.ToString() + ",";
            }
            serializedModel += "assetUploadStatus," + AssetUploadStatus.ToString() + ",";
            serializedModel += "thumbnailUploadStatus," + ThumbnailUploadStatus.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a ContentVersionDTO as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Id != null)
            {
                var idStringValue = Id.ToString();
                dictionary.Add("id", idStringValue);
            }
            
            if (ContentMd5Hash != null)
            {
                var contentMd5HashStringValue = ContentMd5Hash.ToString();
                dictionary.Add("contentMd5Hash", contentMd5HashStringValue);
            }
            
            if (ThumbnailMd5Hash != null)
            {
                var thumbnailMd5HashStringValue = ThumbnailMd5Hash.ToString();
                dictionary.Add("thumbnailMd5Hash", thumbnailMd5HashStringValue);
            }
            
            if (Size != null)
            {
                var sizeStringValue = Size.ToString();
                dictionary.Add("size", sizeStringValue);
            }
            
            if (ContentId != null)
            {
                var contentIdStringValue = ContentId.ToString();
                dictionary.Add("contentId", contentIdStringValue);
            }
            
            if (CreatedAt != null)
            {
                var createdAtStringValue = CreatedAt.ToString();
                dictionary.Add("createdAt", createdAtStringValue);
            }
            
            if (UpdatedAt != null)
            {
                var updatedAtStringValue = UpdatedAt.ToString();
                dictionary.Add("updatedAt", updatedAtStringValue);
            }
            
            var assetUploadStatusStringValue = AssetUploadStatus.ToString();
            dictionary.Add("assetUploadStatus", assetUploadStatusStringValue);
            
            var thumbnailUploadStatusStringValue = ThumbnailUploadStatus.ToString();
            dictionary.Add("thumbnailUploadStatus", thumbnailUploadStatusStringValue);
            
            return dictionary;
        }
    }
}
