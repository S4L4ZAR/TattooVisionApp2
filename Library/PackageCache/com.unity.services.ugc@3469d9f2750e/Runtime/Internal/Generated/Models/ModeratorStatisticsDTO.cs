//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// ModeratorStatisticsDTO model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ModeratorStatisticsDTO")]
    public class ModeratorStatisticsDTO
    {
        /// <summary>
        /// Creates an instance of ModeratorStatisticsDTO.
        /// </summary>
        /// <param name="allTime">allTime param</param>
        /// <param name="past365Days">past365Days param</param>
        /// <param name="past180Days">past180Days param</param>
        /// <param name="past90Days">past90Days param</param>
        /// <param name="past60Days">past60Days param</param>
        /// <param name="past30Days">past30Days param</param>
        /// <param name="past14Days">past14Days param</param>
        /// <param name="past7Days">past7Days param</param>
        /// <param name="pastDay">pastDay param</param>
        /// <param name="reviewsCount">reviewsCount param</param>
        /// <param name="approvalsCount">approvalsCount param</param>
        /// <param name="rejectionsCount">rejectionsCount param</param>
        /// <param name="bannedPlayerCount">bannedPlayerCount param</param>
        [Preserve]
        public ModeratorStatisticsDTO(ModeratorDetailedStatisticsDTO allTime = default, ModeratorDetailedStatisticsDTO past365Days = default, ModeratorDetailedStatisticsDTO past180Days = default, ModeratorDetailedStatisticsDTO past90Days = default, ModeratorDetailedStatisticsDTO past60Days = default, ModeratorDetailedStatisticsDTO past30Days = default, ModeratorDetailedStatisticsDTO past14Days = default, ModeratorDetailedStatisticsDTO past7Days = default, ModeratorDetailedStatisticsDTO pastDay = default, CountStat reviewsCount = default, CountStat approvalsCount = default, CountStat rejectionsCount = default, CountStat bannedPlayerCount = default)
        {
            AllTime = allTime;
            Past365Days = past365Days;
            Past180Days = past180Days;
            Past90Days = past90Days;
            Past60Days = past60Days;
            Past30Days = past30Days;
            Past14Days = past14Days;
            Past7Days = past7Days;
            PastDay = pastDay;
            ReviewsCount = reviewsCount;
            ApprovalsCount = approvalsCount;
            RejectionsCount = rejectionsCount;
            BannedPlayerCount = bannedPlayerCount;
        }

        /// <summary>
        /// Parameter allTime of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "allTime", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO AllTime{ get; }
        
        /// <summary>
        /// Parameter past365Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past365Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past365Days{ get; }
        
        /// <summary>
        /// Parameter past180Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past180Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past180Days{ get; }
        
        /// <summary>
        /// Parameter past90Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past90Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past90Days{ get; }
        
        /// <summary>
        /// Parameter past60Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past60Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past60Days{ get; }
        
        /// <summary>
        /// Parameter past30Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past30Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past30Days{ get; }
        
        /// <summary>
        /// Parameter past14Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past14Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past14Days{ get; }
        
        /// <summary>
        /// Parameter past7Days of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "past7Days", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO Past7Days{ get; }
        
        /// <summary>
        /// Parameter pastDay of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "pastDay", EmitDefaultValue = false)]
        public ModeratorDetailedStatisticsDTO PastDay{ get; }
        
        /// <summary>
        /// Parameter reviewsCount of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "reviewsCount", EmitDefaultValue = false)]
        public CountStat ReviewsCount{ get; }
        
        /// <summary>
        /// Parameter approvalsCount of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "approvalsCount", EmitDefaultValue = false)]
        public CountStat ApprovalsCount{ get; }
        
        /// <summary>
        /// Parameter rejectionsCount of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "rejectionsCount", EmitDefaultValue = false)]
        public CountStat RejectionsCount{ get; }
        
        /// <summary>
        /// Parameter bannedPlayerCount of ModeratorStatisticsDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "bannedPlayerCount", EmitDefaultValue = false)]
        public CountStat BannedPlayerCount{ get; }
    
        /// <summary>
        /// Formats a ModeratorStatisticsDTO into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (AllTime != null)
            {
                serializedModel += "allTime," + AllTime.ToString() + ",";
            }
            if (Past365Days != null)
            {
                serializedModel += "past365Days," + Past365Days.ToString() + ",";
            }
            if (Past180Days != null)
            {
                serializedModel += "past180Days," + Past180Days.ToString() + ",";
            }
            if (Past90Days != null)
            {
                serializedModel += "past90Days," + Past90Days.ToString() + ",";
            }
            if (Past60Days != null)
            {
                serializedModel += "past60Days," + Past60Days.ToString() + ",";
            }
            if (Past30Days != null)
            {
                serializedModel += "past30Days," + Past30Days.ToString() + ",";
            }
            if (Past14Days != null)
            {
                serializedModel += "past14Days," + Past14Days.ToString() + ",";
            }
            if (Past7Days != null)
            {
                serializedModel += "past7Days," + Past7Days.ToString() + ",";
            }
            if (PastDay != null)
            {
                serializedModel += "pastDay," + PastDay.ToString() + ",";
            }
            if (ReviewsCount != null)
            {
                serializedModel += "reviewsCount," + ReviewsCount.ToString() + ",";
            }
            if (ApprovalsCount != null)
            {
                serializedModel += "approvalsCount," + ApprovalsCount.ToString() + ",";
            }
            if (RejectionsCount != null)
            {
                serializedModel += "rejectionsCount," + RejectionsCount.ToString() + ",";
            }
            if (BannedPlayerCount != null)
            {
                serializedModel += "bannedPlayerCount," + BannedPlayerCount.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a ModeratorStatisticsDTO as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            return dictionary;
        }
    }
}
