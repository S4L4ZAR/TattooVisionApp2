//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// ContentStatistics model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ContentStatistics")]
    public class ContentStatistics
    {
        /// <summary>
        /// Creates an instance of ContentStatistics.
        /// </summary>
        /// <param name="ratingsAverage">ratingsAverage param</param>
        /// <param name="ratingsCount">ratingsCount param</param>
        /// <param name="downloadsCount">downloadsCount param</param>
        /// <param name="subscriptionsCount">subscriptionsCount param</param>
        /// <param name="reportsCount">reportsCount param</param>
        [Preserve]
        public ContentStatistics(AverageStat ratingsAverage = default, CountStat ratingsCount = default, CountStat downloadsCount = default, CountStat subscriptionsCount = default, CountStat reportsCount = default)
        {
            RatingsAverage = ratingsAverage;
            RatingsCount = ratingsCount;
            DownloadsCount = downloadsCount;
            SubscriptionsCount = subscriptionsCount;
            ReportsCount = reportsCount;
        }

        /// <summary>
        /// Parameter ratingsAverage of ContentStatistics
        /// </summary>
        [Preserve]
        [DataMember(Name = "ratingsAverage", EmitDefaultValue = false)]
        public AverageStat RatingsAverage{ get; }
        
        /// <summary>
        /// Parameter ratingsCount of ContentStatistics
        /// </summary>
        [Preserve]
        [DataMember(Name = "ratingsCount", EmitDefaultValue = false)]
        public CountStat RatingsCount{ get; }
        
        /// <summary>
        /// Parameter downloadsCount of ContentStatistics
        /// </summary>
        [Preserve]
        [DataMember(Name = "downloadsCount", EmitDefaultValue = false)]
        public CountStat DownloadsCount{ get; }
        
        /// <summary>
        /// Parameter subscriptionsCount of ContentStatistics
        /// </summary>
        [Preserve]
        [DataMember(Name = "subscriptionsCount", EmitDefaultValue = false)]
        public CountStat SubscriptionsCount{ get; }
        
        /// <summary>
        /// Parameter reportsCount of ContentStatistics
        /// </summary>
        [Preserve]
        [DataMember(Name = "reportsCount", EmitDefaultValue = false)]
        public CountStat ReportsCount{ get; }
    
        /// <summary>
        /// Formats a ContentStatistics into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (RatingsAverage != null)
            {
                serializedModel += "ratingsAverage," + RatingsAverage.ToString() + ",";
            }
            if (RatingsCount != null)
            {
                serializedModel += "ratingsCount," + RatingsCount.ToString() + ",";
            }
            if (DownloadsCount != null)
            {
                serializedModel += "downloadsCount," + DownloadsCount.ToString() + ",";
            }
            if (SubscriptionsCount != null)
            {
                serializedModel += "subscriptionsCount," + SubscriptionsCount.ToString() + ",";
            }
            if (ReportsCount != null)
            {
                serializedModel += "reportsCount," + ReportsCount.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a ContentStatistics as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            return dictionary;
        }
    }
}
