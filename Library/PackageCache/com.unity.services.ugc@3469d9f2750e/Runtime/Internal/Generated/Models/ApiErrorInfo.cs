//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// ApiErrorInfo model
    /// </summary>
    [Preserve]
    [DataContract(Name = "ApiErrorInfo")]
    internal class ApiErrorInfo
    {
        /// <summary>
        /// Creates an instance of ApiErrorInfo.
        /// </summary>
        /// <param name="title">title param</param>
        /// <param name="detail">detail param</param>
        /// <param name="details">details param</param>
        /// <param name="status">status param</param>
        [Preserve]
        public ApiErrorInfo(string title = default, string detail = default, List<string> details = default, int status = default)
        {
            Title = title;
            Detail = detail;
            Details = details;
            Status = status;
        }

        /// <summary>
        /// Parameter title of ApiErrorInfo
        /// </summary>
        [Preserve]
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title{ get; }
        
        /// <summary>
        /// Parameter detail of ApiErrorInfo
        /// </summary>
        [Preserve]
        [DataMember(Name = "detail", EmitDefaultValue = false)]
        public string Detail{ get; }
        
        /// <summary>
        /// Parameter details of ApiErrorInfo
        /// </summary>
        [Preserve]
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public List<string> Details{ get; }
        
        /// <summary>
        /// Parameter status of ApiErrorInfo
        /// </summary>
        [Preserve]
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public int Status{ get; }
    
        /// <summary>
        /// Formats a ApiErrorInfo into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Title != null)
            {
                serializedModel += "title," + Title + ",";
            }
            if (Detail != null)
            {
                serializedModel += "detail," + Detail + ",";
            }
            if (Details != null)
            {
                serializedModel += "details," + Details.ToString() + ",";
            }
            serializedModel += "status," + Status.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a ApiErrorInfo as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Title != null)
            {
                var titleStringValue = Title.ToString();
                dictionary.Add("title", titleStringValue);
            }
            
            if (Detail != null)
            {
                var detailStringValue = Detail.ToString();
                dictionary.Add("detail", detailStringValue);
            }
            
            if (Details != null)
            {
                var detailsStringValue = Details.ToString();
                dictionary.Add("details", detailsStringValue);
            }
            
            var statusStringValue = Status.ToString();
            dictionary.Add("status", statusStringValue);
            
            return dictionary;
        }
    }
}
