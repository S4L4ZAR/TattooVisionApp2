//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// Response for Subscription
    /// </summary>
    [Preserve]
    [DataContract(Name = "SubscriptionDTO")]
    internal class SubscriptionDTO
    {
        /// <summary>
        /// Response for Subscription
        /// </summary>
        /// <param name="id">Id of the subscription</param>
        /// <param name="playerId">Id of the player</param>
        /// <param name="content">content param</param>
        /// <param name="createdAt">Date subscription was created</param>
        /// <param name="updatedAt">Date subscription was last updated</param>
        /// <param name="deletedAt">Date subscription was soft deleted</param>
        [Preserve]
        public SubscriptionDTO(string id, string playerId, ContentDTO content = default, DateTime createdAt = default, DateTime updatedAt = default, DateTime? deletedAt = default)
        {
            Id = id;
            PlayerId = playerId;
            Content = content;
            CreatedAt = createdAt;
            UpdatedAt = updatedAt;
            DeletedAt = deletedAt;
        }

        /// <summary>
        /// Id of the subscription
        /// </summary>
        [Preserve]
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id{ get; }
        
        /// <summary>
        /// Id of the player
        /// </summary>
        [Preserve]
        [DataMember(Name = "playerId", IsRequired = true, EmitDefaultValue = true)]
        public string PlayerId{ get; }
        
        /// <summary>
        /// Parameter content of SubscriptionDTO
        /// </summary>
        [Preserve]
        [DataMember(Name = "content", EmitDefaultValue = false)]
        public ContentDTO Content{ get; }
        
        /// <summary>
        /// Date subscription was created
        /// </summary>
        [Preserve]
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        public DateTime CreatedAt{ get; }
        
        /// <summary>
        /// Date subscription was last updated
        /// </summary>
        [Preserve]
        [DataMember(Name = "updatedAt", EmitDefaultValue = false)]
        public DateTime UpdatedAt{ get; }
        
        /// <summary>
        /// Date subscription was soft deleted
        /// </summary>
        [Preserve]
        [DataMember(Name = "deletedAt", EmitDefaultValue = false)]
        public DateTime? DeletedAt{ get; }
    
        /// <summary>
        /// Formats a SubscriptionDTO into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Id != null)
            {
                serializedModel += "id," + Id + ",";
            }
            if (PlayerId != null)
            {
                serializedModel += "playerId," + PlayerId + ",";
            }
            if (Content != null)
            {
                serializedModel += "content," + Content.ToString() + ",";
            }
            if (CreatedAt != null)
            {
                serializedModel += "createdAt," + CreatedAt.ToString() + ",";
            }
            if (UpdatedAt != null)
            {
                serializedModel += "updatedAt," + UpdatedAt.ToString() + ",";
            }
            if (DeletedAt != null)
            {
                serializedModel += "deletedAt," + DeletedAt.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a SubscriptionDTO as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Id != null)
            {
                var idStringValue = Id.ToString();
                dictionary.Add("id", idStringValue);
            }
            
            if (PlayerId != null)
            {
                var playerIdStringValue = PlayerId.ToString();
                dictionary.Add("playerId", playerIdStringValue);
            }
            
            if (CreatedAt != null)
            {
                var createdAtStringValue = CreatedAt.ToString();
                dictionary.Add("createdAt", createdAtStringValue);
            }
            
            if (UpdatedAt != null)
            {
                var updatedAtStringValue = UpdatedAt.ToString();
                dictionary.Add("updatedAt", updatedAtStringValue);
            }
            
            if (DeletedAt != null)
            {
                var deletedAtStringValue = DeletedAt.ToString();
                dictionary.Add("deletedAt", deletedAtStringValue);
            }
            
            return dictionary;
        }
    }
}
