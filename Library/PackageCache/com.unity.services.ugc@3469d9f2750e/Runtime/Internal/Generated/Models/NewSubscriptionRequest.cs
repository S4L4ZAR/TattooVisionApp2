//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// NewSubscriptionRequest model
    /// </summary>
    [Preserve]
    [DataContract(Name = "NewSubscriptionRequest")]
    internal class NewSubscriptionRequest
    {
        /// <summary>
        /// Creates an instance of NewSubscriptionRequest.
        /// </summary>
        /// <param name="projectId">Project ID</param>
        /// <param name="environmentId">Environment ID</param>
        /// <param name="contentId">Content ID</param>
        [Preserve]
        public NewSubscriptionRequest(string projectId, string environmentId, string contentId)
        {
            ProjectId = projectId;
            EnvironmentId = environmentId;
            ContentId = contentId;
        }

        /// <summary>
        /// Project ID
        /// </summary>
        [Preserve]
        [DataMember(Name = "projectId", IsRequired = true, EmitDefaultValue = true)]
        public string ProjectId{ get; }
        
        /// <summary>
        /// Environment ID
        /// </summary>
        [Preserve]
        [DataMember(Name = "environmentId", IsRequired = true, EmitDefaultValue = true)]
        public string EnvironmentId{ get; }
        
        /// <summary>
        /// Content ID
        /// </summary>
        [Preserve]
        [DataMember(Name = "contentId", IsRequired = true, EmitDefaultValue = true)]
        public string ContentId{ get; }
    
        /// <summary>
        /// Formats a NewSubscriptionRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (ProjectId != null)
            {
                serializedModel += "projectId," + ProjectId + ",";
            }
            if (EnvironmentId != null)
            {
                serializedModel += "environmentId," + EnvironmentId + ",";
            }
            if (ContentId != null)
            {
                serializedModel += "contentId," + ContentId;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a NewSubscriptionRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (ProjectId != null)
            {
                var projectIdStringValue = ProjectId.ToString();
                dictionary.Add("projectId", projectIdStringValue);
            }
            
            if (EnvironmentId != null)
            {
                var environmentIdStringValue = EnvironmentId.ToString();
                dictionary.Add("environmentId", environmentIdStringValue);
            }
            
            if (ContentId != null)
            {
                var contentIdStringValue = ContentId.ToString();
                dictionary.Add("contentId", contentIdStringValue);
            }
            
            return dictionary;
        }
    }
}
