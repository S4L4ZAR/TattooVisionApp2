//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Ugc.Generated.Http;



namespace Unity.Services.Ugc.Generated.Models
{
    /// <summary>
    /// UpdateRepresentationRequest model
    /// </summary>
    [Preserve]
    [DataContract(Name = "UpdateRepresentationRequest")]
    internal class UpdateRepresentationRequest
    {
        /// <summary>
        /// Creates an instance of UpdateRepresentationRequest.
        /// </summary>
        /// <param name="tags">tags param</param>
        /// <param name="version">version param</param>
        /// <param name="metadata">metadata param</param>
        [Preserve]
        public UpdateRepresentationRequest(List<string> tags, string version = default, string metadata = default)
        {
            Tags = tags;
            Version = version;
            Metadata = metadata;
        }

        /// <summary>
        /// Parameter tags of UpdateRepresentationRequest
        /// </summary>
        [Preserve]
        [DataMember(Name = "tags", IsRequired = true, EmitDefaultValue = true)]
        public List<string> Tags{ get; }
        
        /// <summary>
        /// Parameter version of UpdateRepresentationRequest
        /// </summary>
        [Preserve]
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string Version{ get; }
        
        /// <summary>
        /// Parameter metadata of UpdateRepresentationRequest
        /// </summary>
        [Preserve]
        [DataMember(Name = "metadata", EmitDefaultValue = false)]
        public string Metadata{ get; }
    
        /// <summary>
        /// Formats a UpdateRepresentationRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (Tags != null)
            {
                serializedModel += "tags," + Tags.ToString() + ",";
            }
            if (Version != null)
            {
                serializedModel += "version," + Version + ",";
            }
            if (Metadata != null)
            {
                serializedModel += "metadata," + Metadata;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a UpdateRepresentationRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (Tags != null)
            {
                var tagsStringValue = Tags.ToString();
                dictionary.Add("tags", tagsStringValue);
            }
            
            if (Version != null)
            {
                var versionStringValue = Version.ToString();
                dictionary.Add("version", versionStringValue);
            }
            
            if (Metadata != null)
            {
                var metadataStringValue = Metadata.ToString();
                dictionary.Add("metadata", metadataStringValue);
            }
            
            return dictionary;
        }
    }
}
